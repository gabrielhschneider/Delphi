unit uInfoPC;

interface

uses
  Windows, SysUtils;

type

  TInfoPC = class
    public
      function ComputerName: String;
      function UserName: String;
      function SystemDirectory: String;
      function WindowsDirectory: String;
      function TempPath: String;
      function VersionEx: String;
  end;

implementation

{ TInfoPC }

function TInfoPC.ComputerName: String;
var
  Buffer: Array[0..255] of Char;
  I: DWord;
begin
  I := SizeOf(Buffer);
  GetComputerName(Buffer, I);
  Result := StrPas(Buffer);
end;

function TInfoPC.SystemDirectory: String;
var
  Buffer: Array[0..255] of Char;
begin
  GetSystemDirectory(Buffer, 255);
  Result := StrPas(Buffer);
end;

function TInfoPC.TempPath: String;
var
  Buffer: Array[0..255] of Char;
begin
  GetTempPath(255, Buffer);
  Result := StrPas(Buffer);
end;

function TInfoPC.UserName: String;
var
  Buffer: Array[0..255] of Char;
  I: DWord;
begin
  I := SizeOf(Buffer);
  GetUserName(Buffer, I);
  Result := StrPas(Buffer);
end;

function TInfoPC.VersionEx: String;
var
  VersionInfo: TOSVersionInfo;
begin
  VersionInfo.dwOSVersionInfoSize := SizeOf(VersionInfo);

  GetVersionEx(VersionInfo);

  case VersionInfo.dwPlatformId of
    0:
    begin
      Result := 'Windows 3.11';
    end;
    1:
    begin
      case VersionInfo.dwMinorVersion of
        0:
        begin
          Result := 'Windows 95';
        end;
        10:
        begin
          if (VersionInfo.szCSDVersion[1] = 'A' ) then
            Result :='Windows 98 SE'
          else
            Result := 'Windows 98';
        end;
        90:
        begin
          Result := 'Windows Millenium';
        end
      else
          Result := 'Não achei a Versão';
      end;
    end;
  end;

end;

function TInfoPC.WindowsDirectory: String;
var
  Buffer: Array[0..255] of Char;
begin
  GetWindowsDirectory(Buffer, 255);
  Result := StrPas(Buffer);
end;

end.
